{"version":3,"sources":["scripts/main.js"],"names":["tree","document","querySelector","coords","getBoundingClientRect","wrapInSpan","list","children","item","text","firstChild","textContent","trim","innerList","firstElementChild","outerHTML","innerHTML","lastElementChild","nodeName","childElementCount","style","cssText","top","left","addEventListener","event","ul","target","closest","hidden"],"mappings":";AAAA,aAkCC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhCD,IAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAASH,EAAKI,wBAgBpB,SAASC,EAAWC,GACCA,IADK,EACLA,EAAAA,EAAAA,EAAKC,UADA,IACU,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAvBC,IAAAA,EAAuB,EAAA,MAC1BC,EAAOD,EAAKE,WAAWC,YAAYC,OACnCC,EAAYL,EAAKM,kBAAkBC,UAEzCP,EAAKQ,UACKP,iBAAAA,OAAAA,EACNI,mBAAAA,OAAAA,EAFJ,YAKuC,OAAnCL,EAAKS,iBAAiBC,UACrBV,EAAKS,iBAAiBE,kBAAoB,GAC7Cd,EAAWG,EAAKS,mBAZI,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAd1BjB,EAAKoB,MAAMC,QAEFlB,mCAAAA,OAAAA,EAAOmB,IACNnB,iBAAAA,OAAAA,EAAOoB,KAHjB,SAMAlB,EAAWL,GAEXA,EAAKwB,iBAAiB,QAAS,SAACC,GACxBC,IAAAA,EAAKD,EAAME,OAAOC,QAAQ,MAAMX,iBAEtCS,EAAGG,QAAUH,EAAGG","file":"main.4f416cd5.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst tree = document.querySelector('.tree');\nconst coords = tree.getBoundingClientRect();\n\ntree.style.cssText = `\n  position: absolute;\n  top: ${coords.top}px;\n  left: ${coords.left}px;\n`;\n\nwrapInSpan(tree);\n\ntree.addEventListener('click', (event) => {\n  const ul = event.target.closest('li').lastElementChild;\n\n  ul.hidden = !ul.hidden;\n});\n\nfunction wrapInSpan(list) {\n  for (const item of list.children) {\n    const text = item.firstChild.textContent.trim();\n    const innerList = item.firstElementChild.outerHTML;\n\n    item.innerHTML = `\n      <span>${text}</span>\n      ${innerList}\n      `;\n\n    if (item.lastElementChild.nodeName === 'UL'\n      && item.lastElementChild.childElementCount < 3) {\n      wrapInSpan(item.lastElementChild);\n    }\n  }\n}\n"]}